# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
       node: ['12']

    steps:
      # https://github.com/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

      # https://github.com/actions/setup-node
      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
         node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  deploy:
    needs: lint
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
       node: ['12']

    steps:
      # https://github.com/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

      # https://github.com/actions/setup-node
      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
         node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci --production

      - name: Remove dev packages
        run: npm prune --production --no-audit

      # https://github.com/docker/build-push-action
      - name: Prepare DockerHub tags
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_REPOSITORY }}
          VERSION=edge

          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi

          TAGS="${DOCKER_IMAGE}:${VERSION}"

          if [ "${{ github.event_name }}" = "push" ]; then
           TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi

          TAGS="${DOCKER_IMAGE}:latest"

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push to DockerHub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.prep.outputs.tags }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
